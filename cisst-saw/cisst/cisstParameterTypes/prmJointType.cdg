// -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab:

inline-header {
#include <cisstMultiTask/mtsGenericObject.h>
// Always include last
#include <cisstParameterTypes/prmExport.h>
}

enum {
      name prmJointType;
      attribute CISST_EXPORT;
      prefix PRM_JOINT_;

      enum-value {
          name UNDEFINED;
          description undefined;
      }
      enum-value {
          name PRISMATIC;
          description prismatic;
      }
      enum-value {
          name REVOLUTE;
          description revolute;
      }
      enum-value {
          name INACTIVE;
          description inactive;
      }
}

inline-header {
    void CISST_EXPORT prmJointTypeToFactor(const vctDynamicVector<prmJointType> & types,
                                           const double prismaticFactor,
                                           const double revoluteFactor,
                                           vctDynamicVector<double> & factors);

    typedef vctDynamicVector<prmJointType> prmJointTypeVec;
    typedef mtsGenericObjectProxy<prmJointTypeVec> prmJointTypeVecProxy;
    CMN_DECLARE_SERVICES_INSTANTIATION(prmJointTypeVecProxy);
}

inline-code {
    void prmJointTypeToFactor(const vctDynamicVector<prmJointType> & types,
                              const double prismaticFactor,
                              const double revoluteFactor,
                              vctDynamicVector<double> & factors)
    {
        // set unitFactor;
        for (size_t i = 0; i < types.size(); i++) {
            switch (types.at(i)) {
            case PRM_JOINT_PRISMATIC:
                factors.at(i) = prismaticFactor;
                break;
            case PRM_JOINT_REVOLUTE:
                factors.at(i) = revoluteFactor;
                break;
            default:
                factors.at(i) = 1.0;
                break;
            }
        }
    }
}
